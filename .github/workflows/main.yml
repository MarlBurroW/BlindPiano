name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semver.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: paulhatch/semantic-version@v4.0.2
        id: semver
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          format: "${major}.${minor}.${patch}-${increment}"
          bump_each_commit: false
          search_commit_body: false
          user_format_type: "csv"
      - name: Create a version file to be consumed in the app
        uses: "DamianReeves/write-file-action@master"
        with:
          path: version
          write-mode: overwrite
          contents: ${{ steps.semver.outputs.version }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/blindpiano:${{ steps.semver.outputs.version }}
      - uses: rtCamp/action-slack-notify@v2
        name: Send failure slack notification
        if: ${{ failure() }}
        env:
          SLACK_CHANNEL: blindpiano
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: ":warning: Le build de l'image de Blind piano version ${{ needs.build.outputs.version }} a échoué"
          SLACK_TITLE: Déploiement échoué
          SLACK_USERNAME: "Github Actions"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
      - uses: Azure/k8s-deploy@v3.1
        name: Deploy to kubernetes
        with:
          namespace: "default"
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/blindpiano:${{ needs.build.outputs.version }}
          manifests: |
            kubernetes/deployment.yaml
            kubernetes/service.yaml
          strategy: blue-green
          route-method: service

      - uses: rtCamp/action-slack-notify@v2
        name: Send failure slack notification
        if: ${{ failure() }}
        env:
          SLACK_CHANNEL: blindpiano
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: ":warning: Le déploiement de Blind piano version ${{ needs.build.outputs.version }} a échoué"
          SLACK_TITLE: Déploiement échoué
          SLACK_USERNAME: "Github Actions"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - uses: rtCamp/action-slack-notify@v2
        name: Send success slack notification
        if: ${{ success() }}
        env:
          SLACK_CHANNEL: blindpiano
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: ":white_check_mark: Blind piano version ${{ needs.build.outputs.version }} déployée avec succès"
          SLACK_TITLE: Déploiement réussi
          SLACK_USERNAME: "Github Actions"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
